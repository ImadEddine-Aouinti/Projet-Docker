

services:
  # Service Backend (Java Spring Boot)
  backend:
    build:
      context: ./app_web
      dockerfile: Dockerfile
    container_name: app_web-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/webdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_OPEN_IN_VIEW=false
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  # Service Frontend (React avec Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: app_web-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Service Base de donn√©es MySQL
  db:
    image: mysql:8.0
    container_name: app_web-db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=webdb
    networks:
      - app-network
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
